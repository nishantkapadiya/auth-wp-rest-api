import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
const inter = Inter({ subsets: ['latin'] });
import { useState } from 'react';
import axios from 'axios';

/** generateToken Function */
async function generateToken(username: string, password: string) {
	try {
		const response = await axios.post('/api/generateToken', { username, password });
		return response.data.jwt_token;
	} catch (error) {
		console.error('Error generating token:', error);
		return null;
	}
}

/** validateToken Function */
async function validateToken(token: string) {
	try {
		const validateUrl = 'http://192.168.1.92/wordpress_1/wp-json/api/v1/token-validate';
		const validateResponse = await axios.get(validateUrl, {
			headers: {
				Authorization: `Bearer ${token}`, // Add the token to the headers
			},
			withCredentials: true,
		});
		return validateResponse.data; // You can handle the response as needed
	} catch (error) {
		console.error('Error validating token:', error);
		return null;
	}
}

export default function Home() {
	const [username, setUsername] = useState('');
	const [password, setPassword] = useState('');
	const [token, setToken] = useState(null);
	const [validationResult, setValidationResult] = useState(null);

	const handleGenerateToken = async () => {
		const generatedToken = await generateToken(username, password);
		if (generatedToken) {
			sessionStorage.setItem('jwt_token', generatedToken);
			setToken(generatedToken);

			// Validate the generated token
			const validationResponse = await validateToken(generatedToken);
			if (validationResponse) {
				setValidationResult(validationResponse);
			}

		}
		setUsername('');
		setPassword('');
	};

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={`${styles.main} ${inter.className}`}>
				<input
					type="text"
					placeholder="Username"
					value={username}
					onChange={(e) => setUsername(e.target.value)}
				/>
				<input
					type="text"
					placeholder="Password"
					value={password}
					onChange={(e) => setPassword(e.target.value)}
				/>
				<button onClick={handleGenerateToken}>Generate Token</button>

				{token && <div>Your generated token: {token}</div>}

				{validationResult && (
					<div>Token validation result: {JSON.stringify(validationResult)}</div>
				)}
			</main>
		</>
	);
}
